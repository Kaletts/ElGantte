@model ElGantte.Models.Integracione

@{
    ViewData["Title"] = "Details";
}

<form id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>


<h1 class="text-center mb-4">Integración @Model.PartnerNavigation.Nombre @Model.ModeloTerminalNavigation.Modelo</h1>

@await Html.PartialAsync("_TempDataMensajes")

<div class="container-fluid">
    <div class="row g-4">

        <!-- Columna 1: Vista General -->
        <div class="col-lg-4 col-md-6">
            <div class="card shadow bg-white rounded h-100">
                <div class="card-header bg-primary text-white fw-bold">
                    Vista General
                </div>
                <div class="card-body">
                    <dl class="row">
                        <dt class="col-5">Modelo Terminal:</dt>
                        <dd class="col-7">@Model.ModeloTerminalNavigation.Modelo</dd>

                        <dt class="col-5">Tipo Solución:</dt>
                        <dd class="col-7">@Model.SoftwareIntegrado</dd>

                        <dt class="col-5">Aplicación:</dt>
                        <dd class="col-7">@Model.NombreSwapp</dd>

                        <dt class="col-5">Certificado:</dt>
                        <dd class="col-7">
                            @if (Model.Certificado == true)
                            {
                                <span class="badge bg-success">Sí</span>
                            }
                            else
                            {
                                <span class="badge bg-danger">No</span>
                            }
                        </dd>

                        <dt class="col-5">Fecha Inicio:</dt>
                        <dd class="col-7">@Model.FechaInicio?.ToString("dd/MM/yyyy")</dd>

                        <dt class="col-5">Fecha Fin:</dt>
                        <dd class="col-7">@Model.FechaFin?.ToString("dd/MM/yyyy")</dd>

                        <dt class="col-5">Días Integrando:</dt>
                        <dd class="col-7">@Model.DiasIntegrando</dd>

                        <dt class="col-5">Días StandBy:</dt>
                        <dd class="col-7">@Model.DiasStandBy</dd>

                        <dt class="col-5">StandBy:</dt>
                        <dd class="col-7">
                            @{
                                var standbyText = Model.StandBy == true ? "Sí" : "No";
                                var badgeColor = Model.StandBy == true ? "bg-warning text-dark" : "bg-success";
                            }
                            <span class="badge @badgeColor"
                                  style="cursor: pointer;"
                                  onclick="activarStandby(@Model.Id)">
                                @standbyText
                            </span>
                        </dd>

                        <dt class="col-5">Caso SF:</dt>
                        <dd class="col-7">@Model.CasoSf</dd>

                        <dt class="col-5">Partner:</dt>
                        <dd class="col-7">
                            <a asp-controller="Partners" asp-action="Details" asp-route-id="@Model.PartnerNavigation.Id">
                                @Model.PartnerNavigation.Nombre
                            </a>
                        </dd>

                        <dt class="col-5">Solución:</dt>
                        <dd class="col-7">@Model.SolucionNavigation.Nombre</dd>

                        <dt class="col-5">Status:</dt>
                        <dd class="col-7">
                            <span class="badge bg-info text-dark">@Model.StatusNavigation.Nombre</span>
                        </dd>
                        <dt class="col-5">Tipo de Conexión:</dt>
                        <dd class="col-7">
                            <span class="badge bg-warning text-dark">
                                @(Model.TipoConexionNavigation?.Nombre ?? "Sin definir")
                            </span>
                        </dd>
                    </dl>
                </div>
            </div>
        </div>

        <!-- Columna 2: Comentarios -->
        <div class="col-lg-4 col-md-6">
            <div class="card shadow bg-white rounded h-100">
                <div class="card-header bg-primary text-white fw-bold">
                    Comentarios
                </div>

                <form asp-action="AgregarComentario" asp-route-id="@Model.Id" method="post" class="p-3">
                    <div class="mb-3">
                        <textarea class="form-control" rows="3" placeholder="Escribe tu comentario..." name="Comentario1" required></textarea>
                    </div>
                    <div class="input-group mb-3">
                        <input type="date" class="form-control" id="fechaInputComentario" name="Fecha" required value="@DateTime.Today.ToString("yyyy-MM-dd")">
                        <input type="hidden" name="Integracion" value="@Model.Id">
                        <button type="submit" class="btn btn-primary ms-2">Enviar</button>
                    </div>
                </form>

                <div class="card-body overflow-auto" style="max-height: 350px;">
                    <ul class="list-group list-group-flush">
                        @foreach (var comentario in Model.Comentarios.OrderByDescending(c => c.Fecha))
                        {
                            <li class="list-group-item">
                                <small class="text-muted"> @comentario.Fecha.ToString("dd/MM/yyyy"):</small>
                                <p>@comentario.Comentario1</p>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-lg-4 col-md-12">
            <div class="card shadow bg-white rounded h-100">
                <div class="card-header bg-primary text-white fw-bold">
                    Etapas
                </div>

                <!-- FORMULARIO PARA AGREGAR / EDITAR ETAPA + SUBETAPA -->
                <form asp-action="AgregarEtapa" asp-route-id="@Model.Id" method="post" class="p-3">

                    <!-- Hidden input para EtapaId (si se va a editar una etapa existente) -->
                    <input type="hidden" name="EtapaId" id="EtapaId" />

                    <!-- Etapa -->
                    <div class="mb-3">
                        <label class="form-label">Etapa</label>
                        <select class="form-select" name="Etapa" id="formEtapa" required>
                            <option value="">Elige una etapa</option>
                            @foreach (var etapa in (SelectList)ViewBag.EtapasDisponibles)
                            {
                                <option value="@etapa.Value">@etapa.Text</option>
                            }
                        </select>
                    </div>

                    <!-- Subetapa -->
                    <div class="mb-3">
                        <label class="form-label">Subetapa (opcional)</label>
                        <select class="form-select" name="SubEtapaId" id="formSubEtapa">
                            <option value="">Elige una subetapa</option>
                            @foreach (var subetapa in (SelectList)ViewBag.SubEtapasDisponibles)
                            {
                                <option value="@subetapa.Value">@subetapa.Text</option>
                            }
                        </select>
                    </div>

                    <!-- Fecha -->
                    <div class="input-group mb-3">
                        <input type="datetime-local" class="form-control" id="formFechaCambioVisible"
                               required value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm")" />
                        <input type="hidden" name="FechaCambio" id="formFechaCambio" value="@DateTime.Now.ToString("yyyy-MM-ddTHH:mm:ss")" />
                        <input type="hidden" name="Integracion" value="@Model.Id" />
                        <button type="submit" class="btn btn-primary ms-2">Enviar</button>
                    </div>

                </form>

                @* Mostrar histórico de etapas con botón de edición *@
                @{
                    var subetapasDict = ViewBag.SubEtapasDiccionario as Dictionary<int, string>;
                }
                <div class="card-body overflow-auto" style="max-height: 350px;">
                    <ul class="list-group list-group-flush">
                        @foreach (var etapa in Model.Historicoetapas.OrderByDescending(e => e.FechaCambio))
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center"
                                data-etapa-id="@etapa.Id">
                                <div>
                                    <small class="text-muted">@etapa.FechaCambio.ToString("dd/MM/yyyy HH:mm:ss")</small>
                                    <p class="mb-0">
                                        <strong>Etapa:</strong> @etapa.Etapa
                                        @if (etapa.SubEtapa.HasValue && subetapasDict.ContainsKey(etapa.SubEtapa.Value))
                                        {
                                            <br />
                                            <strong>Subetapa:</strong>

                                            @subetapasDict[etapa.SubEtapa.Value]
                                        }
                                    </p>
                                </div>

                                <button type="button" class="btn btn-sm btn-outline-primary btn-editar-etapa"
                                        data-bs-toggle="modal" data-bs-target="#editarEtapaModal"
                                        data-etapa-id="@etapa.Id"
                                        data-etapa="@etapa.Etapa"
                                        data-subetapa="@etapa.SubEtapa"
                                        data-fecha="@etapa.FechaCambio.ToString("o")">
                                    Editar
                                </button>

                            </li>
                        }
                    </ul>
                </div>

                @* Modal para editar etapa (rellena automáticamente con JS) *@
                <div class="modal fade" id="editarEtapaModal" tabindex="-1" aria-labelledby="editarEtapaLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <form method="post" asp-action="AgregarEtapa" asp-route-id="@Model.Id">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editarEtapaLabel">Editar Etapa</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                                </div>
                                <div class="modal-body">
                                    <input type="hidden" name="EtapaId" id="modalEtapaId" />

                                    <div class="mb-3">
                                        <label class="form-label">Etapa</label>
                                        <select class="form-select" name="Etapa" id="modalEtapa" required>
                                            <option value="">Elige una etapa</option>
                                            @foreach (var e in (SelectList)ViewBag.EtapasDisponibles)
                                            {
                                                <option value="@e.Value">@e.Text</option>
                                            }
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Subetapa (opcional)</label>
                                        <select class="form-select" name="SubEtapaId" id="modalSubEtapa">
                                            <option value="">Elige una subetapa</option>
                                            @foreach (var s in (SelectList)ViewBag.SubEtapasDisponibles)
                                            {
                                                <option value="@s.Value">@s.Text</option>
                                            }
                                        </select>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Fecha</label>
                                        <input type="datetime-local" class="form-control" id="modalFechaCambioVisible" required />
                                        <input type="hidden" name="FechaCambio" id="modalFechaCambio" />
                                    </div>

                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                                    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <hr />
    <div class="row g-4">
        <!-- Columna para Kits de Integración -->
        <div class="col-lg-4 col-md-12">
            <div class="card shadow bg-white rounded h-100">
                <div class="card-header bg-success text-white fw-bold">
                    Asignar Kit de Tarjetas
                </div>

                <!-- Formulario para asignar un kit disponible -->
                <form asp-action="AsignarKit" asp-route-id="@Model.Id" method="post" class="p-3">
                    <div class="input-group mb-3">
                        <label class="input-group-text">Kit disponibles</label>
                        <select class="form-select" name="KitTarjetaId" required>
                            <option value="">Selecciona un kit</option>
                            @foreach (var kit in (SelectList)ViewBag.KitsDisponibles)
                            {
                                <option value="@kit.Value">@kit.Text</option>
                            }
                        </select>
                    </div>

                    <button type="submit" class="btn btn-success w-100">Asignar Kit</button>
                </form>

                <!-- Listado de kits ya asignados -->
                <div class="card-body overflow-auto" style="max-height: 350px;">
                    <!-- Kits asignados -->
                    @if (Model.KitsTarjetas != null && Model.KitsTarjetas.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var kit in Model.KitsTarjetas)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-start">
                                    <div>
                                        <strong>Kit:</strong> @kit.Nombre
                                        <strong>Fecha:</strong> @kit.FechaActualizacion
                                        <ul class="mt-2">
                                            @foreach (var tarjeta in kit.Tarjetas)
                                            {
                                                <li>
                                                    <strong>Tarjeta:</strong> @tarjeta.Numero (@tarjeta.Tipo)
                                                </li>
                                            }
                                        </ul>
                                    </div>
                                    <form asp-action="QuitarKit" asp-route-integracionId="@Model.Id" asp-route-kitId="@kit.Id" method="post" class="ms-3">
                                        <button type="submit" class="btn btn-danger btn-sm" title="Quitar kit">
                                            X
                                        </button>
                                    </form>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No hay kits asignados a esta integración.</p>
                    }
                </div>
            </div>
        </div>

        <!-- Columna para Terminales de Integración -->
        <div class="col-lg-4 col-md-12">
            <div class="card shadow bg-white rounded h-100">
                <div class="card-header bg-info text-white fw-bold">
                    Asignar Terminal
                </div>

                <!-- Formulario para asignar una terminal disponible -->
                <form asp-action="AsignarTerminal" asp-route-id="@Model.Id" method="post" class="p-3">
                    <div class="input-group mb-3">
                        <label class="input-group-text">Terminales disponibles</label>
                        <select class="form-select" name="TerminalId" required>
                            <option value="">Selecciona una terminal</option>
                            @foreach (var terminal in (SelectList)ViewBag.TerminalesDisponibles)
                            {
                                <option value="@terminal.Value">@terminal.Text</option>
                            }
                        </select>
                    </div>

                    <button type="submit" class="btn btn-info w-100">Asignar Terminal</button>
                </form>

                <!-- Listado de terminales ya asignadas -->
                <div class="card-body overflow-auto" style="max-height: 350px;">
                    @if (Model.Terminales != null && Model.Terminales.Any())
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var terminal in Model.Terminales)
                            {
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <span><strong>Terminal:</strong> @terminal.Serie</span>
                                    <span><strong>Fecha:</strong> @terminal.FechaUltimoCambio</span>
                                    <form asp-action="QuitarTerminal" asp-route-integracionId="@Model.Id" asp-route-terminalId="@terminal.Id" method="post">
                                        <button type="submit" class="btn btn-danger btn-sm" title="Quitar terminal">
                                            X
                                        </button>
                                    </form>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <p class="text-muted">No hay terminales asignadas a esta integración.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="action-bar bg-light shadow-sm border-top py-2 pe-2 d-flex justify-content-end gap-2">
    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-primary d-flex align-items-center">
        <i class="fas fa-edit me-1" aria-hidden="true"></i>
        Editar
    </a>
    <a asp-action="Index" class="btn btn-sm btn-outline-secondary d-flex align-items-center">
        <i class="fas fa-arrow-left me-1" aria-hidden="true"></i>
        Volver
    </a>
</div>



@section Scripts {
    <script>

            function activarStandby(id) {
            const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            fetch('/Integraciones/ActivarStandby/' + id, {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': token
                }
            })
            .then(response => {
                if (response.ok) {
                    location.reload();
                } else {
                    alert('Error al cambiar el estado StandBy.');
                }
            })
            .catch(() => alert('Error en la conexión.'));
        }


    </script>

    <script>
                       document.addEventListener('DOMContentLoaded', function () {

            // --- Para el modal ---
            document.querySelectorAll('.btn-editar-etapa').forEach(btn => {
                btn.addEventListener('click', function () {
                    const etapaId = this.dataset.etapaId;
                    const etapa = this.dataset.etapa;
                    const subetapa = this.dataset.subetapa;
                    const fecha = this.dataset.fecha;

                    document.getElementById('modalEtapaId').value = etapaId;
                    document.getElementById('modalEtapa').value = etapa;
                    document.getElementById('modalSubEtapa').value = subetapa || "";

                    if (fecha) {
                        const dateObj = new Date(fecha);
                        const yyyy = dateObj.getFullYear();
                        const mm = String(dateObj.getMonth() + 1).padStart(2, '0');
                        const dd = String(dateObj.getDate()).padStart(2, '0');
                        const hh = String(dateObj.getHours()).padStart(2, '0');
                        const min = String(dateObj.getMinutes()).padStart(2, '0');
                        const ss = String(dateObj.getSeconds()).padStart(2, '0');

                        // visible
                        document.getElementById('modalFechaCambioVisible').value = `${yyyy}-${mm}-${dd}T${hh}:${min}`;
                        // oculto con segundos
                        document.getElementById('modalFechaCambio').value = `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;
                    }
                });
            });

            // --- Actualiza hidden al cambiar input visible (modal) ---
            const modalVisible = document.getElementById('modalFechaCambioVisible');
            const modalHidden = document.getElementById('modalFechaCambio');
            modalVisible.addEventListener('change', function () {
                const date = new Date(this.value);
                const yyyy = date.getFullYear();
                const mm = String(date.getMonth() + 1).padStart(2, '0');
                const dd = String(date.getDate()).padStart(2, '0');
                const hh = String(date.getHours()).padStart(2, '0');
                const min = String(date.getMinutes()).padStart(2, '0');
                const ss = String(date.getSeconds()).padStart(2, '0');
                modalHidden.value = `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;
            });

            // --- Para nueva etapa ---
            const formVisible = document.getElementById('formFechaCambioVisible');
            const formHidden = document.getElementById('formFechaCambio');
            formVisible.addEventListener('change', function () {
                const date = new Date(this.value);
                const yyyy = date.getFullYear();
                const mm = String(date.getMonth() + 1).padStart(2, '0');
                const dd = String(date.getDate()).padStart(2, '0');
                const hh = String(date.getHours()).padStart(2, '0');
                const min = String(date.getMinutes()).padStart(2, '0');
                const ss = String(date.getSeconds()).padStart(2, '0');
                formHidden.value = `${yyyy}-${mm}-${dd}T${hh}:${min}:${ss}`;
            });

        });


    </script>


}
