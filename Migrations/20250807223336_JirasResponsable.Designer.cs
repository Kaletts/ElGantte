// <auto-generated />
using System;
using ElGantte.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElGantte.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250807223336_JirasResponsable")]
    partial class JirasResponsable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "8.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ElGantte.Models.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.ToTable("apikeys");
                });

            modelBuilder.Entity("ElGantte.Models.Cartascesion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IntegracioneId")
                        .HasColumnType("int");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TipoMime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IntegracioneId");

                    b.ToTable("cartascesion");
                });

            modelBuilder.Entity("ElGantte.Models.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comentario1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Comentario");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("Integracion")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Integracion" }, "Integracion");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique();

                    b.ToTable("comentarios");
                });

            modelBuilder.Entity("ElGantte.Models.Cuadernosprueba", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IntegracioneId")
                        .HasColumnType("int");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TipoMime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("IntegracioneId");

                    b.ToTable("cuadernosprueba");
                });

            modelBuilder.Entity("ElGantte.Models.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory");
                });

            modelBuilder.Entity("ElGantte.Models.Etapasintegracion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasComment("Normal, Stand-by, KO");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique();

                    b.ToTable("etapasintegracion");
                });

            modelBuilder.Entity("ElGantte.Models.Historicoetapa", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Etapa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Integracion")
                        .HasColumnType("int");

                    b.Property<int?>("SubEtapa")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "SubEtapa" }, "FK_SubEtapa_idx");

                    b.HasIndex(new[] { "Integracion" }, "Integracion")
                        .HasDatabaseName("Integracion1");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE1");

                    b.ToTable("historicoetapa");
                });

            modelBuilder.Entity("ElGantte.Models.Historicoreunione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acta")
                        .HasColumnType("text");

                    b.Property<string>("Enlace")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("FechaReunion")
                        .HasColumnType("date");

                    b.Property<int?>("Integracion")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Integracion" }, "FK_Integraciones_idx");

                    b.ToTable("historicoreuniones");
                });

            modelBuilder.Entity("ElGantte.Models.Integracione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CasoSf")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("CasoSF");

                    b.Property<bool?>("Certificado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("DiasIntegrando")
                        .HasColumnType("int");

                    b.Property<int?>("DiasStandBy")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaInicio")
                        .HasColumnType("date");

                    b.Property<int?>("ModeloTerminal")
                        .HasColumnType("int");

                    b.Property<string>("NombreSwapp")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NombreSWAPP");

                    b.Property<int>("Partner")
                        .HasColumnType("int");

                    b.Property<string>("SoftwareIntegrado")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Solucion")
                        .HasColumnType("int");

                    b.Property<bool?>("StandBy")
                        .HasColumnType("tinyint(1)");

                    b.Property<sbyte?>("Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("UltimoDiaIntegrando")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("UltimoDiaStandBy")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("ModeloTerminal");

                    b.HasIndex(new[] { "Solucion" }, "FK_Solucion_idx");

                    b.HasIndex(new[] { "Status" }, "Status");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE2");

                    b.HasIndex(new[] { "Partner" }, "integraciones_ibfk_2");

                    b.ToTable("integraciones");
                });

            modelBuilder.Entity("ElGantte.Models.Jira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asunto")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Codigo")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("Finalizado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("Partner")
                        .HasColumnType("int");

                    b.Property<string>("Responsable")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE3");

                    b.HasIndex(new[] { "Partner" }, "jiras_ibfk_1");

                    b.ToTable("jiras");
                });

            modelBuilder.Entity("ElGantte.Models.Kittarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IntegracionId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("IntegracionId");

                    b.ToTable("KitTarjetas");
                });

            modelBuilder.Entity("ElGantte.Models.Modelosterminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Fabricante")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE1");

                    b.ToTable("modelosterminal");
                });

            modelBuilder.Entity("ElGantte.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountManager")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("FechaCambio")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaRegistro")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Notas")
                        .HasColumnType("text");

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Tipo")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE4");

                    b.ToTable("partners");
                });

            modelBuilder.Entity("ElGantte.Models.Solucione", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("Id_UNIQUE2");

                    b.ToTable("soluciones");
                });

            modelBuilder.Entity("ElGantte.Models.Status", b =>
                {
                    b.Property<sbyte>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<sbyte>("Id"));

                    b.Property<DateTime>("FechaCambio")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE5");

                    b.ToTable("statuses");
                });

            modelBuilder.Entity("ElGantte.Models.Tarjetas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KitTarjetaId")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PIN")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("KitTarjetaId");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE6");

                    b.ToTable("tarjetas");
                });

            modelBuilder.Entity("ElGantte.Models.Telecertificaciones", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("Enlace")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateOnly>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("IntegracioneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IntegracioneId");

                    b.ToTable("telecertificaciones");
                });

            modelBuilder.Entity("ElGantte.Models.Terminale", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaUltimoCambio")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("IntegracionId")
                        .HasColumnType("int");

                    b.Property<int>("Modelo")
                        .HasColumnType("int");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("varchar(90)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IntegracionId" }, "FK_Integracion_idx");

                    b.HasIndex(new[] { "Modelo" }, "FK_Modelo_idx");

                    b.ToTable("terminales");
                });

            modelBuilder.Entity("ElGantte.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ElGantte.Models.ApiKey", b =>
                {
                    b.HasOne("ElGantte.Models.Partner", "Partner")
                        .WithMany("ApiKeys")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("ElGantte.Models.Cartascesion", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "Integracion")
                        .WithMany("CartasCesion")
                        .HasForeignKey("IntegracioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Integracion");
                });

            modelBuilder.Entity("ElGantte.Models.Comentario", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "IntegracionNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("Integracion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("comentarios_ibfk_1");

                    b.Navigation("IntegracionNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Cuadernosprueba", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "Integracion")
                        .WithMany("CuadernosPrueba")
                        .HasForeignKey("IntegracioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Integracion");
                });

            modelBuilder.Entity("ElGantte.Models.Historicoetapa", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "IntegracionNavigation")
                        .WithMany("Historicoetapas")
                        .HasForeignKey("Integracion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("historicoetapa_ibfk_1");

                    b.HasOne("ElGantte.Models.Historicoetapa", "SubEtapaNavigation")
                        .WithMany("InverseSubEtapaNavigation")
                        .HasForeignKey("SubEtapa")
                        .HasConstraintName("FK_SubEtapa");

                    b.Navigation("IntegracionNavigation");

                    b.Navigation("SubEtapaNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Historicoreunione", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "IntegracionNavigation")
                        .WithMany("Historicoreuniones")
                        .HasForeignKey("Integracion")
                        .HasConstraintName("FK_Integraciones");

                    b.Navigation("IntegracionNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Integracione", b =>
                {
                    b.HasOne("ElGantte.Models.Modelosterminal", "ModeloTerminalNavigation")
                        .WithMany("Integraciones")
                        .HasForeignKey("ModeloTerminal");

                    b.HasOne("ElGantte.Models.Partner", "PartnerNavigation")
                        .WithMany("Integraciones")
                        .HasForeignKey("Partner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("integraciones_ibfk_2");

                    b.HasOne("ElGantte.Models.Solucione", "SolucionNavigation")
                        .WithMany("Integraciones")
                        .HasForeignKey("Solucion")
                        .IsRequired()
                        .HasConstraintName("FK_Solucion");

                    b.HasOne("ElGantte.Models.Status", "StatusNavigation")
                        .WithMany("Integraciones")
                        .HasForeignKey("Status")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("integraciones_ibfk_1");

                    b.Navigation("ModeloTerminalNavigation");

                    b.Navigation("PartnerNavigation");

                    b.Navigation("SolucionNavigation");

                    b.Navigation("StatusNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Jira", b =>
                {
                    b.HasOne("ElGantte.Models.Partner", "PartnerNavigation")
                        .WithMany("Jiras")
                        .HasForeignKey("Partner")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("jiras_ibfk_1");

                    b.Navigation("PartnerNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Kittarjeta", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "Integracion")
                        .WithMany("KitsTarjetas")
                        .HasForeignKey("IntegracionId");

                    b.Navigation("Integracion");
                });

            modelBuilder.Entity("ElGantte.Models.Tarjetas", b =>
                {
                    b.HasOne("ElGantte.Models.Kittarjeta", "KitTarjeta")
                        .WithMany("Tarjetas")
                        .HasForeignKey("KitTarjetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KitTarjeta");
                });

            modelBuilder.Entity("ElGantte.Models.Telecertificaciones", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "Integracion")
                        .WithMany("TeleCertificaciones")
                        .HasForeignKey("IntegracioneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Integracion");
                });

            modelBuilder.Entity("ElGantte.Models.Terminale", b =>
                {
                    b.HasOne("ElGantte.Models.Integracione", "IntegracionNavigation")
                        .WithMany("Terminales")
                        .HasForeignKey("IntegracionId");

                    b.HasOne("ElGantte.Models.Modelosterminal", "ModeloNavigation")
                        .WithMany("Terminales")
                        .HasForeignKey("Modelo")
                        .IsRequired()
                        .HasConstraintName("FK_Modelo");

                    b.Navigation("IntegracionNavigation");

                    b.Navigation("ModeloNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Historicoetapa", b =>
                {
                    b.Navigation("InverseSubEtapaNavigation");
                });

            modelBuilder.Entity("ElGantte.Models.Integracione", b =>
                {
                    b.Navigation("CartasCesion");

                    b.Navigation("Comentarios");

                    b.Navigation("CuadernosPrueba");

                    b.Navigation("Historicoetapas");

                    b.Navigation("Historicoreuniones");

                    b.Navigation("KitsTarjetas");

                    b.Navigation("TeleCertificaciones");

                    b.Navigation("Terminales");
                });

            modelBuilder.Entity("ElGantte.Models.Kittarjeta", b =>
                {
                    b.Navigation("Tarjetas");
                });

            modelBuilder.Entity("ElGantte.Models.Modelosterminal", b =>
                {
                    b.Navigation("Integraciones");

                    b.Navigation("Terminales");
                });

            modelBuilder.Entity("ElGantte.Models.Partner", b =>
                {
                    b.Navigation("ApiKeys");

                    b.Navigation("Integraciones");

                    b.Navigation("Jiras");
                });

            modelBuilder.Entity("ElGantte.Models.Solucione", b =>
                {
                    b.Navigation("Integraciones");
                });

            modelBuilder.Entity("ElGantte.Models.Status", b =>
                {
                    b.Navigation("Integraciones");
                });
#pragma warning restore 612, 618
        }
    }
}
